{"version":3,"sources":["webpack:///./src/components/header.js","webpack:///./src/components/layout.js","webpack:///./src/components/modal.js","webpack:///./src/pages/index.js"],"names":["Header","siteTitle","style","background","margin","maxWidth","padding","display","justifyContent","to","color","textDecoration","fontWeight","flex","listStyleType","flexFlow","className","defaultProps","Layout","children","data","cosmicjsGlobals","metadata","title","Date","getFullYear","href","src","Modal","props","close","video","document","getElementById","id","role","type","onClick","aria-hidden","IndexPage","videoDict","pages","allCosmicjsVideos","edges","map","node","forEach","x","push","imgix_url","image","videos","key","Math","random","showVideo","width","controls"],"mappings":"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","file":"component---src-pages-index-js-2a0ef36f72f3e03bff77.js","sourcesContent":["import { Link } from \"gatsby\"\nimport PropTypes from \"prop-types\"\nimport React from \"react\"\n\nconst Header = ({ siteTitle }) => (\n  <header\n    style={{\n      background: `white`,\n    }}\n  >\n    <div\n      style={{\n        margin: `0 auto`,\n        maxWidth: 1550,\n        padding: `1.45rem 1.0875rem`,\n        display: \"flex\",\n        justifyContent: \"space-between\",\n      }}\n    >\n      <h1 style={{ margin: 0 }}>\n        <Link\n          to=\"/\"\n          style={{\n            color: `black`,\n            textDecoration: `none`,\n            fontWeight: `300`,\n            flex: 2,\n          }}\n        >\n          {siteTitle}\n        </Link>\n      </h1>\n      <ul\n        style={{\n          listStyleType: `none`,\n          display: `flex`,\n          flexFlow: `row `,\n          \n        }}\n      >\n        <li className='text-uppercase'>\n          <Link to=\"/about\" className=' text-dark'>about</Link>\n        </li>\n      </ul>\n    </div>\n  </header>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nimport Header from \"./header\"\nimport \"./layout.css\"\nimport \"bootstrap/dist/css/bootstrap.min.css\"\n\nconst Layout = ({ children }) => {\n  const data = useStaticQuery(graphql`\n    {\n      cosmicjsGlobals(slug: { eq: \"header\" }) {\n        metadata {\n          title\n        }\n      }\n    }\n  `)\n\n  return (\n    <>\n      <Header siteTitle={data.cosmicjsGlobals.metadata.title} />\n      <div>\n        <main>{children}</main>\n        <footer className='container-fluid p-4 d-flex flex-row'>\n          {new Date().getFullYear()}, Built by&nbsp;\n          {` `}\n          <a style={{flex: '3', textDecoration: 'none'}} href=\"https://goshua13.github.io/Portfolio2/#/\">Goshua13</a>\n          <div style={{flex: '1;'}}><a href=\"https://cosmicjs.com/add-bucket?import_bucket=5dc8bef1cabf3000089cbdfe\"><img src=\"https://cdn.cosmicjs.com/51fe54d0-4f6e-11e9-9f32-8d001da69630-powered-by-cosmicjs.svg\" /></a></div>\n        </footer>\n      </div>\n    </>\n  )\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","import React from \"react\"\n\nconst Modal = (props) => {\n    const close =() => {\n        const video = document.getElementById(`${props.id}`)\n        if(video.style.display === 'none') {\n            return video.style.display = 'block'\n          } else {\n           return video.style.display = 'none'\n          }\n    }\n  return (\n    <div className=\"modal\" id={props.id} style={{display: 'none'}}>\n    <div className=\"modal-dialog modal-dialog-centered\" role=\"document\">\n      <div className=\"modal-content\">\n        <div className=\"modal-header\">\n          <h5 className=\"modal-title\" id=\"exampleModalLongTitle\">{props.title}</h5>\n          <button type=\"button\" className=\"close\" onClick={close}>\n            <span aria-hidden=\"true\">&times;</span>\n          </button>\n        </div>\n        <div className=\"modal-body\">\n          {props.children}\n        </div>\n        <div className=\"modal-footer\">\n          <button type=\"button\" className=\"btn btn-secondary\" onClick={close}>Close</button>\n        </div>\n      </div>\n    </div>\n  </div>\n  )\n}\n\nexport default Modal\n","import React from \"react\"\n\nimport Layout from \"../components/layout\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport Modal from \"../components/modal\"\nimport \"./main.scss\"\n\nconst IndexPage = () => {\n  const data = useStaticQuery(graphql`\n    {\n      allCosmicjsVideos {\n        edges {\n          node {\n            id\n            title\n            metadata {\n              image {\n                url\n                imgix_url\n              }\n              video {\n                imgix_url\n              }\n            }\n          }\n        }\n      }\n    }\n  `)\n\n  const showVideo = id => {\n    const video = document.getElementById(`${id}`)\n    if (video.style.display === \"none\") {\n      return (video.style.display = \"block\")\n    } else {\n      return (video.style.display = \"none\")\n    }\n  }\n\n  let videoDict = []\n  const pages = data.allCosmicjsVideos.edges.map(({ node }) => node)\n  let id = 0\n  pages.forEach(x => {\n    id += 1\n    videoDict.push({\n      id,\n      video: x.metadata.video.imgix_url,\n      image: x.metadata.image.imgix_url,\n      title: x.title,\n    })\n  })\n  const videos = videoDict.map(x => {\n    return (\n      <div key={Math.random()} id=\"box\" className=\"col-12 col-sm-6 col-md-4\">\n        <div className=\"titles\">\n          <div className=\"image_title\" onClick={() => showVideo(x.id)}>\n            <h2>{x.title}</h2>\n            <p>&mdash; view &mdash;</p>\n          </div>\n          <img className=\"video_images\" src={x.image} />\n        </div>\n        <Modal id={x.id} title={x.title}>\n          <video width=\"750\" controls>\n            <source src={x.video} type=\"video/mp4\" />\n            Your browser does not support HTML5 video.\n          </video>\n        </Modal>\n      </div>\n    )\n  })\n  return (\n    <Layout>\n      <div className=\"row tiles\">{videos}</div>\n    </Layout>\n  )\n}\n\nexport default IndexPage\n"],"sourceRoot":""}